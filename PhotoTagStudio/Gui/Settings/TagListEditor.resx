<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACg
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAwMBBAMTARoBNQIvAVYBTAI0AZIBTAI0AZEBOAIxAV0BIgIgATEDDQES
        AwQBBQMAAQHYAAEqAicBQAFSAi8BtQOTAf8DwAH/A2AB/wE6ASwBKAH3AVIBKQEnAcoBTwIzAZsBOAIx
        AV4BIgIgATEDDQESAwQBBQMAAQEMAAMHAQoBJwIlATsDGQEjAwoBDgMAAQGsAAFdAVYBVQH7A9EB/wPR
        Af8DwwH/A8QB/wOrAf8D+gH/A6IB/wE6ASwBKAH3AVIBKQEnAcoBTwIzAZsBOAIxAV4BIgIgATEDDQES
        AwQBBQQAAUoCNQGKAU8BuQHfAf8BQQE3AUMB3wFSAi8BrwFIAjQBhgEzAi4BUgEcAhsBKAMOARMDAQEC
        AwABAZQAAU4CNAGfA9UB/wOvAf8DqAH/A9UB/wOiAf8D9wH/A/EB/wPxAf8D8QH/A9sB/wOSAf8BOgEs
        ASgB9wFSASkBJwHKAU8CMwGaATICLQFPBAABSgI1AYsE/wF0AdgC/wF0AdgC/wFfAc0B9QH/ASYBrQHc
        Af8BMgFGAVsB6QFSAS0BLgG4AUwCNAGRAToCMQFgASACHwEuAwsBD4wAAVICMQG/A7oB/wPaAf8DqQH/
        A9oB/wO1Af8D9wH/A+gB/wO8Af8DoQH/A5MB/wOhAf8DpgH/A+gB/wOkAf8BVAEpASYBzgQAAU4BNQE2
        AZwBcgHGAeIB/wF+AeIC/wF+AeIC/wF+AeIC/wF+AeIC/wF+AeIC/wF+AeIC/wF2Ad4B/AH/ATkBugHi
        Af8BIwFgAYEB8wFCAjQBdgMCAQOIAAFSAjEBvwO8Af8D3wH/A6oB/wPfAf8DxAH/A/cB/wPdAf8DrwH/
        AzcB/wNiAf8DYgH/A0cB/wO1Af8D4AH/AVgBRwFEAfkEAAFRATsBQAHHASYBqwHeAf8BrAHyAv8BhgHs
        Av8BhgHsAv8BhgHsAv8BhgHsAv8BhgHsAv8BhgHsAv8BhgHsAv8BcAHUAv8BUQEsAS4BwwMVAR2IAAFS
        AjEBvwO+Af8D4wH/A6sB/wPjAf8DtQH/A/cB/wPGAf8DkQH/A2UB/wNRAf8DWgH/A1QB/wORAf8D1wH/
        AWABUAFOAfkEAAFWATwBQQHJAU8BvwHyAf8B8QH+Av8BkAH2Av8BkAH2Av8BkAH2Av8BkAH2Av8BkAH2
        Av8BkAH2Av8BkAH2Av8BcgHWAv8BRAG/Ad8B/wE6AjIBYgMAAQGEAAFSAjEBvwPAAf8D5wH/A60B/wPn
        Af8DogH/A/cB/wPLAf8DgAH/A0cB/wGOAWIBOgH/AcABWwEBAf8DPgH/A1oB/wPOAf8BWQFNAUsB+gQA
        AS0BrAHZAf8BYQHIAfsB/wGPAdIB6QH/AZkD/wGZA/8BmQP/AZkD/wGZA/8BmQP/AZkD/wF1AdkC/wHD
        A/8BUQIvAasDDQEShAABUgIxAb8DwgH/A+wB/wOuAf8D7AH/A7UB/wP3Af8DzQH/A7kB/wN2Af8DXQH/
        AXoBbQFaAf8DNAH/A10B/wPFAf8DWAH/BAABXwHBAeYB/wFvAdMC/wE5AbYB5gX/AeUD/wHJA/8BswP/
        AbMD/wGzA/8BswP/AXsB2QL/AdYD/wE3AYEBnQH3ATECLAFNhAABUgIxAb8DxQH/A/EB/wOvAf8D8QH/
        A8QB/wP3Af8DvAH/A+YB/wNAAf8DZQH/A00B/wOCAf8D0AH/A7wB/wNWAf8EAAFmAcMB5gH/AYEB5AL/
        AYEB5AL/AYEB5AL/AYEB5AL/AVkBzQHvAf8BagHEAeIB/wHZA/8B0QP/AdED/wGBAdkC/wHpA/8B6QP/
        AU0CMwGXAwcBCYAAAVICMQG/A9IB/wPvAf8DsAH/A/UB/wOeAf8DowH/A7MB/wPGAf8D8gH/A30B/wNA
        Af8DwwH/A84B/wOzAf8DVAH/BAABoAHbAfIB/wGPAfUC/wGPAfUC/wGPAfUC/wGPAfUC/wGPAfUC/wGP
        AfUC/wEwAbcB3AH/AWIBvwHfAf8BrwHfAe8F/wH+A/8B/AP/AUYBOAFCAdcDEgEZgAABYgJOAe8DwwH/
        A/kB/wP5Af8D+QH/A6MB/wOqAf8DqgH/A6oB/wORAf8D5AH/A+kB/wOYAf8DqgH/A6oB/wNSAf8EAAGq
        Ad4B8gH/AZkD/wGZA/8BmQP/AZkD/wGZA/8BmQP/AZkD/wGZA/8BmQP/ASgBswHZAf8BHgIdASsBGAIX
        ASEBHAIbASgDAAEBgAABMgItAVAD/gH/A/4B/wM0Af8DwAH/A8AB/wM0Af8DpgH/A5AB/wOSAf8DgwH/
        A6IB/wNkAf8DZwH/A1oB/wNQAf8EAAFSATgBPAHCAaQD/wGZA/8BmQP/AeIB+wL/AVoBRgFNAdYBewHK
        AeYB/wG1AeIB8gH/AdwB/AL/AcYB/QL/AT0BuQHcAf8BFgIVAR6QAAEhAiABMAFNAjUBlwFnAkQB3AOX
        Af8D3wH/A/UB/wPyAf8D7wH/A+wB/wO3Af8DtQH/A7AB/wOBAf8DYQH/AUUBNQEzAfMIAAFaATsBQAHF
        AXIBxgHiAf8BrwHfAe8B/wFSAT0BRAHOAwcBCQ8AAQEDAAEBrAABNQIvAVYBTwI1AZsBZgJLAegDjwH/
        A5YB/wOEAf8BWQI1Ab4BPwIzAWwDFAEc/wDBAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQABgAEfAv8EAAGAAQMBgwH/BAABgAEAAYABHwYAAYABBwYAAYABAwYAAYABAwYAAYABAQYA
        AYABAQYAAYABAQYAAYAHAAGABwABgAcAAYABBwQAAYABAAHBAc8EAAH+AQAC/wQABP8EAAs=
</value>
  </data>
</root>